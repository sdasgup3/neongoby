Index: lib/DSA/StdLibPass.cpp
===================================================================
--- lib/DSA/StdLibPass.cpp	(revision 156528)
+++ lib/DSA/StdLibPass.cpp	(working copy)
@@ -417,6 +417,8 @@
   {"_ZNSolsEPFRSoS_E", {NRET_YARGS, NRET_YNARGS, NRET_NARGS, NRET_NARGS, false}},
   //endl
   {"_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", {NRET_NARGS, NRET_NARGS, NRET_NARGS, NRET_NARGS, false}},
+  // Added by Jingyue
+  {"strtoll",       {NRET_YARGS, NRET_NYARGS, NRET_NYARGS, NRET_YARGS, false}},
   // Terminate the list of special functions recognized by this pass
   {0,            {NRET_NARGS, NRET_NARGS, NRET_NARGS, NRET_NARGS, false}},
 };
@@ -696,11 +698,11 @@
         for (unsigned y = 0; y < CI->getNumArgOperands(); ++y)
           if (isa<PointerType>(CI->getArgOperand(y)->getType())){
             if (Graph->hasNodeForValue(CI->getArgOperand(y))){
-              if (recFuncs[x].action.read[y])
+              if (recFuncs[x].action.read[y + 1])
                 Graph->getNodeForValue(CI->getArgOperand(y)).getNode()->setReadMarker();
-              if (recFuncs[x].action.write[y])
+              if (recFuncs[x].action.write[y + 1])
                 Graph->getNodeForValue(CI->getArgOperand(y)).getNode()->setModifiedMarker();
-              if (recFuncs[x].action.heap[y])
+              if (recFuncs[x].action.heap[y + 1])
                 Graph->getNodeForValue(CI->getArgOperand(y)).getNode()->setHeapMarker();
             }
           }
@@ -715,7 +717,7 @@
             if (Graph->hasNodeForValue(CI))
               toMerge.push_back(Graph->getNodeForValue(CI));
         for (unsigned y = 0; y < CI->getNumArgOperands(); ++y)
-          if (recFuncs[x].action.mergeNodes[y])
+          if (recFuncs[x].action.mergeNodes[y + 1])
             if (isa<PointerType>(CI->getArgOperand(y)->getType()))
               if (Graph->hasNodeForValue(CI->getArgOperand(y)))
                 toMerge.push_back(Graph->getNodeForValue(CI->getArgOperand(y)));
@@ -768,11 +770,11 @@
         for (unsigned y = 0; y < CI->getNumArgOperands(); ++y)
           if (isa<PointerType>(CI->getArgOperand(y)->getType())){
             if (Graph->hasNodeForValue(CI->getArgOperand(y))){
-              if (recFuncs[x].action.read[y])
+              if (recFuncs[x].action.read[y + 1])
                 Graph->getNodeForValue(CI->getArgOperand(y)).getNode()->setReadMarker();
-              if (recFuncs[x].action.write[y])
+              if (recFuncs[x].action.write[y + 1])
                 Graph->getNodeForValue(CI->getArgOperand(y)).getNode()->setModifiedMarker();
-              if (recFuncs[x].action.heap[y])
+              if (recFuncs[x].action.heap[y + 1])
                 Graph->getNodeForValue(CI->getArgOperand(y)).getNode()->setHeapMarker();
             }
           }
@@ -787,7 +789,7 @@
             if (Graph->hasNodeForValue(CI))
               toMerge.push_back(Graph->getNodeForValue(CI));
         for (unsigned y = 0; y < CI->getNumArgOperands(); ++y)
-          if (recFuncs[x].action.mergeNodes[y])
+          if (recFuncs[x].action.mergeNodes[y + 1])
             if (isa<PointerType>(CI->getArgOperand(y)->getType()))
               if (Graph->hasNodeForValue(CI->getArgOperand(y)))
                 toMerge.push_back(Graph->getNodeForValue(CI->getArgOperand(y)));
@@ -843,7 +845,7 @@
               // as appropriate.
               //
               for (unsigned y = 0; y < CI->getNumArgOperands(); ++y)
-                if (recFuncs[x].action.read[y]){
+                if (recFuncs[x].action.read[y + 1]){
                   if (isa<PointerType>(CI->getArgOperand(y)->getType())){
                     if (Graph->hasNodeForValue(CI->getArgOperand(y)))
                       Graph->getNodeForValue(CI->getArgOperand(y)).getNode()->setReadMarker();
@@ -864,7 +866,7 @@
                   if (Graph->hasNodeForValue(CI))
                     toMerge.push_back(Graph->getNodeForValue(CI));
               for (unsigned y = 0; y < CI->getNumArgOperands(); ++y)
-                if (recFuncs[x].action.mergeNodes[y])
+                if (recFuncs[x].action.mergeNodes[y + 1])
                   if (isa<PointerType>(CI->getArgOperand(y)->getType()))
                     if (Graph->hasNodeForValue(CI->getArgOperand(y)))
                       toMerge.push_back(Graph->getNodeForValue(CI->getArgOperand(y)));
